@function formatSelector($key_prop, $Args) {
  $result:    "";
  $sel:       map-get($Args, $__SEL__);
  $selType:   map-get($Args, $__SELTYPE__);
  $MQ:        map-get($Args, $__MQ__);
  $type:      map-get($Args, $__TYPE__);
  $i_cycle:   map-get($Args, "cycleKey");
  $sE:        map-get($Args, "SecondaryElement");


  // formating vars
  $-COMP-: customizeSelector($key_prop, $componentPrefix, $componentPostfix);
  $-SEL-: customizeSelector($sel, $selectorPrefix, $selectorPostfix);
  $-MQ-: customizeSelector($MQ, $mediaQueryPrefix, $mediaQueryPostfix);
  $_: " ";
  $-div-: "-";
  $-dot-: ".";

  @if $-MQ- == "-" {
    $-MQ-: ""
  }

// Default styles
  $Args: map-merge($Args, (
    $__DEFAULT__:         glueSelectorName(".", $-SEL-),
    $__GLOBAL__:          glueSelectorName($-SEL-),
    $__PSEUDOCLASS__:     glueSelectorName(":", $-SEL-),
    $__PSEUDOELEMENT__:   glueSelectorName("::", $-SEL-),
    $__ID__:              glueSelectorName($-SEL-),
  ));



  // Rules
  @if ($type == $__SIMPLE__) {
    $Args: map-merge($Args, (
      // $__DEFAULT__:     glueSelectorName($-dot- , $-SEL-, $-MQ-),
      // $__GLOBAL__:      glueSelectorName($-SEL-),
      // $__PSEUDOCLASS__: glueSelectorName(":", $-SEL-),
      // $__ID__:          glueSelectorName("#", $-SEL-),
    ));
    $result: checkFormatForSelector($Args);
  }

  // Cycle done
  @if ($type == $__CYCLE__) {
    $Args: map-merge($Args, (
      "prd":          glueSelectorName($-dot-, $-SEL-, $i_cycle), 
      "pr-d":         glueSelectorName($-dot-, $-SEL-, $-div-, $i_cycle),
      "prd+":         glueSelectorName($-dot-, $-SEL-, $i_cycle, $-MQ-), 
      "pr-d+":        glueSelectorName($-dot-, $-SEL-, $-div-, $i_cycle, $-MQ-),

      "prt":          glueSelectorName($-SEL-, $i_cycle), 
      "pr-t":         glueSelectorName($-SEL-, $-div-, $i_cycle),

      "prid":         glueSelectorName("#", $-SEL-, $i_cycle), 
      "pr-id":        glueSelectorName("#", $-SEL-, $-div-, $i_cycle),

      $__DEFAULT__:   glueSelectorName($-dot-, $-SEL-, $-MQ-, $-div-, $i_cycle),
      ));
    $result: checkFormatForSelector($Args);
  }

  // For Block Components
  @if ($type == $__BLOCK__) or ($type == $__LIST__) {
    $-dotS-: ".";
    $-MQS-: $-MQ-;
    @if $-SEL- == "" {
      $-div-: "";
      $-dotS-: "";
      $-MQS-: "";
    }
      $Args: map-merge($Args, (
        "prc":            glueSelectorName($-dot-,  $-SEL-, $-div-, $sE, $-MQ-),
        "prt":            glueSelectorName($-SEL-, $-dot-,  $sE, $-MQ-),
        "prid":           glueSelectorName("#", $-SEL-, $-div-,  $sE, $-MQ-),

        "prd":            glueSelectorName($-dot-,  $-SEL-, $sE),
        "prd+":           glueSelectorName($-dot-,  $-SEL-, $sE, $-MQ-), 
        "pr-d":           glueSelectorName($-dot-,  $-SEL-, $-div-, $sE),
        "pr-d+":          glueSelectorName($-dot-,  $-SEL-, $-div-, $sE, $-MQ-),

        "pr-c":           glueSelectorName($-dotS-, $-SEL-, $-MQS-, $-dot-, $sE, $-MQ-),
        "pr-c-c":         glueSelectorName($-dotS-, $-SEL-, $-dot-, $sE),
        "pr-c-c+":        glueSelectorName($-dotS-, $-SEL-, $-dot-, $sE, $-MQ-),
        "pr-c+-c":        glueSelectorName($-dotS-, $-SEL-, $-MQS-, $-dot-, $sE),
        "pr-c+-c+":       glueSelectorName($-dotS-, $-SEL-, $-MQS-, $-dot-, $sE, $-MQ-),

        "pr-c-p":         glueSelectorName($-dotS-, $-SEL-, ":",  $sE),
        "pr-c-t":         glueSelectorName($-dotS-, $-SEL-, " ",  $sE),
        "pr-c-id":        glueSelectorName($-dotS-, $-SEL-, " #", $sE),
        "pr-c+-p":        glueSelectorName($-dotS-, $-SEL-, $-MQS-, ":",  $sE),
        "pr-c+-t":        glueSelectorName($-dotS-, $-SEL-, $-MQS-, " ", $sE),
        "pr-c+-id":       glueSelectorName($-dotS-, $-SEL-, $-MQS-, " #", $sE),

        "pr-t":           glueSelectorName($-SEL-, $-dot-, $sE, $-MQ-),
        "pr-t-c":         glueSelectorName($-SEL-, $-dot-, $sE),
        "pr-t-c+":        glueSelectorName($-SEL-, $-dot-, $sE, $-MQ-),
        "pr-t-p":         glueSelectorName($-SEL-, ":", $sE),
        "pr-t-t":         glueSelectorName($-SEL-,  " ", $sE),
        "pr-t-id":        glueSelectorName($-SEL-, " #", $sE),

        "pr-id":          glueSelectorName("#", $-SEL-, $-dot-, $sE, $-MQ-),
        "pr-id-c":        glueSelectorName("#", $-SEL-, $-dot-, $sE),
        "pr-id-c+":       glueSelectorName("#", $-SEL-, $-dot-, $sE, $-MQ-),
        "pr-id-p":        glueSelectorName("#", $-SEL-, ":",  $sE),
        "pr-id-t":        glueSelectorName("#", $-SEL-, " ",  $sE),
        "pr-id-id":       glueSelectorName("#", $-SEL-, " #", $sE),

        $__DEFAULT__:         glueSelectorName($-dot-,  $-SEL-, $-div-, $sE, $-MQ-),
      ));
      $result: checkFormatForSelector($Args);
  
  }

  // Animation formating
  @if ($type == $__ANIMATION__) {
    $Args: map-merge($Args, (
      "prd":          glueSelectorName($-COMP-, $sE), 
      "pr-d":         glueSelectorName($-COMP-, $-div- ,$sE),
      // "prd+":         glueSelectorName($-COMP-, $-MQ-, $-div- ,$sE), 
      // "pr-d+":        glueSelectorName($-COMP-, $-MQ-, $-div- ,$sE),

      $__DEFAULT__:     glueSelectorName($-COMP-, $-div- ,$sE),
    ));
    $result: checkFormatForSelector($Args);
  }

  @return $result;
}