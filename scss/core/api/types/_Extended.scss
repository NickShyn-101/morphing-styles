@mixin generateTypeOfExtended($Args) {
  $type:            map-get($Args, $__TYPE__);
  $start:           map-get($Args, $__START__);
  $end:             map-get($Args, $__END__);
  $extend:          map-get($Args, $__EXTEND__);
  $AllSelectors:    ();

  @if $extend != null {
    @if ($type == $__LIST__) or ($type == $__BLOCK__) {
      $data:          map-get($Args, $__DATA__);
       @each $propSelector, $_ in $data {
        $Args: map-merge($Args, ($__SE__: $propSelector));  
             
        $Selector: formatSelector(map-get($Args, $__SEL__), $Args);
        $AllSelectors: append($AllSelectors,  $Selector, "comma");
      }
    } @else if ($type == $__CYCLE__) {
      @for $i from $start through $end {
        $Args:        map-merge($Args,($__SE__: $i));

        $Selector: formatSelector(map-get($Args, $__SEL__), $Args);
        $AllSelectors: append($AllSelectors, $Selector, "comma");
      }
    }
     
    $Args: map-merge($Args,($__ALLSELECTORS__: $AllSelectors));
    @include globalChecks($extend, $Args);
  }
}

@mixin formatGenTypeOfExtended($Args) {
  $AllSelectors: map-get($Args, $__ALLSELECTORS__);
  $extend: map-get($Args, $__EXTEND__);

  #{$AllSelectors} {
    @each $propName, $propValue in $extend {
      @if $propName != $__RES__ {
        #{$propName}: #{$propValue};
      }
    }
  }
}
