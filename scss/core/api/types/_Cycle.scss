@mixin generateTypeOfCycle($Args) {
  $start:       map-get($Args, $__START__);
  $end:         map-get($Args, $__END__);
  
  @for $i from $start through $end {
    $Args:      map-merge($Args,($__SE__: $i));
    $Selector:  formatSelector(map-get($Args, $__SEL__), $Args);
    $Args:      map-merge($Args,($__SELECTOR__: $Selector));

    @include globalChecks($Args)
  }
}

@mixin formatGenTypeOfCycle($Args) {
  $Selector:    map-get($Args, $__SELECTOR__);
  $i:           map-get($Args, $__SE__);

  #{$Selector} {
    @each $propName, $propValue in $Args {
      @if (index($reservedNames, $propName) == null) {
        @if Expressions($propValue, $i) != null {
          #{ $propName}: Expressions($propValue, $i);
        } @else {
          #{ $propName}: #{$propValue};
        }
      }
    } 
  }
}
