// fixed bug with offset when we use global gap 

%testing-settings {
  // background-color: rgba(50, 50, 50, 0.15);
  // border: 1px dashed rgba(50, 50, 50, 0.15);
  // padding: 10px;
}


@import "functions";

main,
aside,
footer,
header,
section,
.section {
  display: block;
  margin: 0;
}

%global-grid-settings {
  display: flex;
  flex-wrap: wrap;
  align-items: flex-start;
  @extend %testing-settings;
}

%global-col-settings {
  @extend %testing-settings;
}

@mixin grid-structure($isMQ: false) {
  .container {
    flex-direction: row;
    width: 100%;
    @extend %global-grid-settings;
    gap: $gapInContainer;
  }

  .row {
    flex-direction: row;
    width: 100%;
    @extend %global-grid-settings;
    gap: $gapInRow;
  }

  @for $i from 1 through $col-count {
    .col-#{$i},
    .cg-#{$i} {
      width: widthWithGap($col-count, $i, $gapInRow);

      @extend %global-col-settings;
    }
  }

  @for $i from 0 through $col-count {
    .cf-#{$i} {
      flex: $i;
      @extend %global-col-settings;
    }
  }
}

// need to fix offset with gap param
@mixin offsetProps($offsetL, $offsetR, $isMQ: false) {
  .offset-l0 {
    margin-left: 0px;
  }
  .offset-r0 {
    margin-right: 0px;
  }
  @for $i from 1 through ($col-count - 1) {
    @if ($offsetL) {
      .offset-l#{$i} {
        margin-left: widthWithGap($col-count, $i, $gapInRow, true);
        @debug "calculate function is not working right with gaps";
      }
    }
    @if ($offsetR) {
      .offset-r#{$i} {
        margin-right: widthWithGap($col-count, $i, $gapInRow, true);
      }
    }
  }
}

// additional styles
.strict {
  max-width: $container-width;
}

.m-auto,
.to-center,
.to-mid {
  margin: 0 auto;
}

//tasks
// flex-basis:  gen
// flex-grow:   gen
// flex-shrink: gen
// gap:         gen
